name: apply-prod

concurrency:
  group: terraform-prod

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
      - .github/workflows/apply-prod.yml

jobs:
  apply:
    permissions:
      contents: "read" # needed for gcp_auth
      id-token: "write" # needed for gcp_auth to create id token
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_TERRAFORM_EXECUTOR_SERVICE_ACCOUNT_EMAIL }}

      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            tf-executor-gh-token:${{ vars.GCP_PROJECT_ID }}/terraform-executor-gh-token
            tf-executor-hcloud-token:${{ vars.GCP_PROJECT_ID }}/terraform-executor-hcloud-token
            tf-executor-cf-token:${{ vars.GCP_PROJECT_ID }}/terraform-executor-cloudflare-token
            ansible-portainer-password:${{ vars.GCP_PROJECT_ID }}/ansible-portainer-admin-password

      - name: Tofu Init
        run: tofu init -input=false
        working-directory: terraform/environments/prod

      - name: Tofu Apply
        run: tofu apply -input=false -no-color -lock-timeout=300s -auto-approve
        env:
          GITHUB_TOKEN: ${{ steps.secrets.outputs.tf-executor-gh-token }}
          HCLOUD_TOKEN: ${{ steps.secrets.outputs.tf-executor-hcloud-token }}
          CLOUDFLARE_API_TOKEN: ${{ steps.secrets.outputs.tf-executor-cf-token }}
          TF_VAR_ssh_public_key: "{default=\"${{ vars.SSH_PUBLIC_KEY }}\"}"
        working-directory: terraform/environments/prod

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create venv
        run: python -m venv .venv

      - name: Install dependencies
        run: .venv/bin/pip install -r requirements.txt

      - name: Install Ansible Dependencies
        run: ansible-galaxy install -r requirements.yml
        working-directory: ansible

      - name: Run Ansible Playbook
        run: ansible-playbook playbooks/main.yml --extra-vars "@extra_vars.yml" -e "portainer_admin_password=\"${{ steps.secrets.outputs.ansible-portainer-password }}\"" -e "authorized_keys=\"${{ vars.SSH_PUBLIC_KEY }}\""
        working-directory: ansible
        env:
          HCLOUD_TOKEN: ${{ steps.secrets.outputs.tf-executor-hcloud-token }}